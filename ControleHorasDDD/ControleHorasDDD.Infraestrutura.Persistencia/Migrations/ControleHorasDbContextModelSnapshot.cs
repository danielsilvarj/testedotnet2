// <auto-generated />
using System;
using ControleHorasDDD.Infraestrutura.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ControleHorasDDD.Infraestrutura.Persistencia.Migrations
{
    [DbContext(typeof(ControleHorasDbContext))]
    partial class ControleHorasDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ControleHoras.Dominio.Entidade.HoraTrabalhada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("Date");

                    b.Property<int?>("ProjetosId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetosId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HoraTrabalhada");
                });

            modelBuilder.Entity("ControleHoras.Dominio.Entidade.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("Date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("ControleHoras.Dominio.Entidade.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TipoUsuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2021, 1, 10, 22, 29, 45, 584, DateTimeKind.Local).AddTicks(3313),
                            Descricao = "Administrador do Sistema",
                            Nome = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2021, 1, 10, 22, 29, 45, 585, DateTimeKind.Local).AddTicks(4268),
                            Descricao = "Usuário do Tipo Desenvolvedor",
                            Nome = "Desenvolvedor"
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2021, 1, 10, 22, 29, 45, 585, DateTimeKind.Local).AddTicks(4293),
                            Descricao = "Usuário do Tipo Gerente",
                            Nome = "Gerente"
                        });
                });

            modelBuilder.Entity("ControleHoras.Dominio.Entidade.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<bool>("EhAdministrador")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TipoUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ControleHoras.Dominio.Entidade.UsuarioProjeto", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdProjeto")
                        .HasColumnType("int");

                    b.Property<int?>("ProjetosId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "IdProjeto");

                    b.HasIndex("ProjetosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioProjeto");
                });

            modelBuilder.Entity("ControleHoras.Dominio.Entidade.HoraTrabalhada", b =>
                {
                    b.HasOne("ControleHoras.Dominio.Entidade.Projeto", "Projetos")
                        .WithMany()
                        .HasForeignKey("ProjetosId");

                    b.HasOne("ControleHoras.Dominio.Entidade.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("ControleHoras.Dominio.Entidade.Usuario", b =>
                {
                    b.HasOne("ControleHoras.Dominio.Entidade.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioId");
                });

            modelBuilder.Entity("ControleHoras.Dominio.Entidade.UsuarioProjeto", b =>
                {
                    b.HasOne("ControleHoras.Dominio.Entidade.Projeto", "Projetos")
                        .WithMany("UsuarioProjeto")
                        .HasForeignKey("ProjetosId");

                    b.HasOne("ControleHoras.Dominio.Entidade.Usuario", "Usuarios")
                        .WithMany("UsuarioProjeto")
                        .HasForeignKey("UsuariosId");
                });
#pragma warning restore 612, 618
        }
    }
}
